#!/usr/bin/env python

# ruff: noqa: E741

import enum
import logging

logger = logging.getLogger(__name__)


class OwnershipTypeEnum(enum.Enum):
    PU = "PUBLICLY OWNED"
    PR = "PRIVATELY OWNED"
    MA = "AIR FORCE OWNED"
    MN = "NAVY OWNED"
    MR = "ARMY OWNED"
    CG = "COAST GUARD OWNED"


class FacilityUseEnum(enum.Enum):
    PU = "OPEN TO THE PUBLIC"
    PR = "PRIVATE"


class DeterminationMethodEnum(enum.Enum):
    E = "ESTIMATED"
    S = "SURVEYED"


class RunwayMarkingsTypeEnum(enum.Enum):
    PIR = "PRECISION INSTRUMENT"
    NPI = "NONPRECISION INSTRUMENT"
    BSC = "BASIC"
    NRS = "NUMBERS ONLY"
    NSTD = "NONSTANDARD (OTHER THAN NUMBERS ONLY)"
    BUOY = "BUOYS (SEAPLANE BASE)"
    STOL = "SHORT TAKEOFF AND LANDING"
    NONE = "NONE"


class RunwayMarkingsConditionEnum(enum.Enum):
    G = "GOOD"
    F = "FAIR"
    P = "POOR"


class VisualGlideSlopeIndicatorEnum(enum.Enum):
    S2L = "2-BOX SAVASI ON LEFT SIDE OF RUNWAY"
    S2R = "2-BOX SAVASI ON RIGHT SIDE OF RUNWAY"
    V2L = "2-BOX VASI ON LEFT SIDE OF RUNWAY"
    V2R = "2-BOX VASI ON RIGHT SIDE OF RUNWAY"
    V4L = "4-BOX VASI ON LEFT SIDE OF RUNWAY"
    V4R = "4-BOX VASI ON RIGHT SIDE OF RUNWAY"
    V6L = "6-BOX VASI ON LEFT SIDE OF RUNWAY"
    V6R = "6-BOX VASI ON RIGHT SIDE OF RUNWAY"
    V12 = "12-BOX VASI ON BOTH SIDES OF RUNWAY"
    V16 = "16-BOX VASI ON BOTH SIDES OF RUNWAY"
    P2L = "2-LGT PAPI ON LEFT SIDE OF RUNWAY"
    P2R = "2-LGT PAPI ON RIGHT SIDE OF RUNWAY"
    P4L = "4-LGT PAPI ON LEFT SIDE OF RUNWAY"
    P4R = "4-LGT PAPI ON RIGHT SIDE OF RUNWAY"
    NSTD = "NONSTANDARD VASI SYSTEM"
    PVT = "PRIVATELY OWNED APPROACH SLOPE"
    VAS = "NON-SPECIFIC VASI SYSTEM"
    NONE = "NO APPROACH SLOPE LIGHT SYSTEM"
    N = "NO APPROACH SLOPE LIGHT SYSTEM"
    TRIL = "TRI-COLOR VASI ON LEFT SIDE OF RUNWAY"
    TRIR = "TRI-COLOR VASI ON RIGHT SIDE OF RUNWAY"
    PSIL = "PULSATING/STEADY BURNING VASI ON LEFT SIDE OF RUNWAY"
    PSIR = "PULSATING/STEADY BURNING VASI ON RIGHT SIDE OF RUNWAY"
    PNIL = "SYSTEM OF PANELS ON LEFT SIDE OF RUNWAY THAT MAY OR MAY NOT BE LIGHTED"
    PNIR = "SYSTEM OF PANELS ON RIGHT SIDE OF RUNWAY THAT MAY OR MAY NOT BE LIGHTED"


class RVREquipmentEnum(enum.Enum):
    T = "TOUCHDOWN"
    M = "MIDFIELD"
    R = "ROLLOUT"
    N = "NO RVR AVAILABLE"
    TM = "TOUCHDOWN AND MIDFIELD"
    TR = "TOUCHDOWN AND ROLLOUT"
    MR = "MIDFIELD AND ROLLOUT"
    TMR = "TOUCHDOWN, MIDFIELD, AND ROLLOUT"


class ControllingObjectMarkingEnum(enum.Enum):
    M = "MARKED"
    L = "LIGHTED"
    ML = "MARKED AND LIGHTED"
    LM = "MARKED AND LIGHTED"


class AirportStatusEnum(enum.Enum):
    CI = "CLOSED INDEFINITELY"
    CP = "CLOSED PERMANENTLY"
    O = "OPERATIONAL"  # noqa: E741


class AirportInspectionMethodEnum(enum.Enum):
    F = "FEDERAL"
    S = "STATE"
    C = "CONTRACTOR"
    O = "5010-1 PUBLIC USE MAILOUT PROGRAM"  # Actual value in source data is 1
    T = "5010-2 PRIVATE USE MAILOUT PROGRAM"  # Actual value in source data is 2


class AgencyPerformingInspectionEnum(enum.Enum):
    F = "FAA AIRPORTS FIELD PERSONNEL"
    S = "STATE AERONAUTICAL PERSONNEL"
    C = "PRIVATE CONTRACT PERSONNEL"
    N = "OWNER"


class SegmentedCircleEnum(enum.Enum):
    Y = "YES"
    N = "NO"
    NONE = "NONE"
    YL = "YES, LIGHTED"  # Actual value in source data is Y-L


# CLEAR changed to WHITE starting Dec 1, 2022
class BeaconColorEnum(enum.Enum):
    WG = "WHITE-GREEN (LIGHTED LAND AIRPORT)"
    WY = "WHITE-YELLOW (LIGHTED SEAPLANE BASE)"
    WGY = "WHITE-GREEN-YELLOW (HELIPORT)"
    SWG = "SPLIT-WHITE-GREEN (LIGHTED MILITARY AIRPORT)"
    W = "WHITE (UNLIGHTED LAND AIRPORT)"
    Y = "YELLOW (UNLIGHTED SEAPLANE BASE)"
    G = "GREEN  (LIGHTED LAND AIRPORT)"
    N = "NONE"


class FAARegionEnum(enum.Enum):
    AAL = "ALASKA"
    ACE = "CENTRAL"
    AEA = "EASTERN"
    AGL = "GREAT LAKES"
    AIN = "INTERNATIONAL"
    ANE = "NEW ENGLAND"
    ANM = "NORTHWEST MOUNTAIN"
    ASO = "SOUTHERN"
    ASW = "SOUTHWEST"
    AWP = "WESTERN-PACIFIC"


class NavaidPositionSurveyAccuracyEnum(enum.Enum):
    ZERO = "UNKNOWN"
    ONE = "DEGREE"
    TWO = "10 MINUTES"
    THREE = "1 MINUTE"
    FOUR = "10 SECONDS"
    FIVE = "1 SECOND OR BETTER"
    SIX = "NOS"
    SEVEN = "3RD ORDER TRIANGULATION"


class NavaidMonitoringCategoryEnum(enum.Enum):
    ONE = "1 - INTERNAL MONITORING PLUS A STATUS INDICATOR INSTALLED AT CONTROL POINT. (REVERTS TO A TEMPORARY CATEGORY 3 STATUS WHEN THE CONTROL POINT IS NOT MANNED.)"
    TWO = "2 - INTERNAL MONITORING WITH STATUS INDICATOR AT CONTROL POINT INOPERATIVE BUT PILOT REPORTS INDICATE FACILITY IS OPERATING NORMALLY.  (THIS IS A TEMPORARY SITUATION THAT REQUIRES NO PROCEDURAL ACTION.)"
    THREE = (
        "3 - INTERNAL MONITORING ONLY. STATUS INDICATOR NON INSTALLED AT CONTROL POINT."
    )
    FOUR = "4 - INTERNAL MONITOR NOT INSTALLED. REMOTE STATUS INDICATOR PROVIDED AT CONTROL POINT.  THIS CATEGORY IS APPLICABLE ONLY TO NON-DIRECTIONAL BEACONS."


class StandardServiceVolumeEnum(enum.Enum):
    T = "TERMINAL"
    L = "LOW ALTITUDE"
    H = "HIGH ALTITUDE"
    VH = "VOR HIGH"
    VL = "VOR LOW"
    DH = "DME HIGH"
    DL = "DME LOW"


class YesNoNullEnum(enum.Enum):
    Y = "YES"
    N = "NO"
    NULL = "NULL"


class FanMarkerTypeEnum(enum.Enum):
    BONE = "BONE"
    ELLIPTICAL = "ELLIPTICAL"


class VORReceiverCheckpointAirGroundCodeEnum(enum.Enum):
    A = "AIR"
    G = "GROUND"
    G1 = "GROUND ONE"
