"""Initial version

Revision ID: 88479bf118a1
Revises:
Create Date: 2022-06-13 16:31:54.122269+00:00

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "88479bf118a1"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "airports",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("facility_type", sa.String(length=13), nullable=True),
        sa.Column("faa_id", sa.String(length=4), nullable=True),
        sa.Column("effective_date", sa.Date(), nullable=True),
        sa.Column("region", sa.String(length=3), nullable=True),
        sa.Column("field_office", sa.String(length=4), nullable=True),
        sa.Column("state_code", sa.String(length=2), nullable=True),
        sa.Column("state_name", sa.String(length=20), nullable=True),
        sa.Column("county", sa.String(length=21), nullable=True),
        sa.Column("county_remark", sa.String(length=1500), nullable=True),
        sa.Column("countys_state", sa.String(length=2), nullable=True),
        sa.Column("city", sa.String(length=40), nullable=True),
        sa.Column("city_remark", sa.String(length=1500), nullable=True),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("name_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "ownership_type",
            sa.Enum("PU", "PR", "MA", "MN", "MR", "CG", name="ownershiptypeenum"),
            nullable=True,
        ),
        sa.Column("ownership_type_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "facility_use",
            sa.Enum("PU", "PR", name="facilityuseenum"),
            nullable=True,
        ),
        sa.Column("facility_use_remark", sa.String(length=1500), nullable=True),
        sa.Column("owners_name", sa.String(length=35), nullable=True),
        sa.Column("owners_name_remark", sa.String(length=1500), nullable=True),
        sa.Column("owners_address", sa.String(length=72), nullable=True),
        sa.Column("owners_address_remark", sa.String(length=1500), nullable=True),
        sa.Column("owners_city_state_zip", sa.String(length=45), nullable=True),
        sa.Column(
            "owners_city_state_zip_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("owners_phone", sa.String(length=16), nullable=True),
        sa.Column("owners_phone_remark", sa.String(length=1500), nullable=True),
        sa.Column("managers_name", sa.String(length=35), nullable=True),
        sa.Column("managers_name_remark", sa.String(length=1500), nullable=True),
        sa.Column("managers_address", sa.String(length=72), nullable=True),
        sa.Column("managers_address_remark", sa.String(length=1500), nullable=True),
        sa.Column("managers_city_state_zip", sa.String(length=45), nullable=True),
        sa.Column(
            "managers_city_state_zip_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("managers_phone", sa.String(length=16), nullable=True),
        sa.Column("managers_phone_remark", sa.String(length=1500), nullable=True),
        sa.Column("latitude_dms", sa.String(length=15), nullable=True),
        sa.Column("latitude_dms_remark", sa.String(length=1500), nullable=True),
        sa.Column("latitude_secs", sa.String(length=12), nullable=True),
        sa.Column("longitude_dms", sa.String(length=15), nullable=True),
        sa.Column("longitude_dms_remark", sa.String(length=1500), nullable=True),
        sa.Column("longitude_secs", sa.String(length=12), nullable=True),
        sa.Column(
            "coords_method",
            sa.Enum("E", "S", name="determinationmethodenum"),
            nullable=True,
        ),
        sa.Column("coords_method_remark", sa.String(length=1500), nullable=True),
        sa.Column("elevation", sa.Float(precision=1), nullable=True),
        sa.Column("elevation_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "elevation_method",
            sa.Enum("E", "S", name="determinationmethodenum"),
            nullable=True,
        ),
        sa.Column("mag_variation", sa.String(length=3), nullable=True),
        sa.Column("mag_variation_year", sa.Integer(), nullable=True),
        sa.Column("pattern_alt", sa.Integer(), nullable=True),
        sa.Column("pattern_alt_remark", sa.String(length=1500), nullable=True),
        sa.Column("sectional", sa.String(length=30), nullable=True),
        sa.Column("sectional_remark", sa.String(length=1500), nullable=True),
        sa.Column("distance_from_city", sa.Integer(), nullable=True),
        sa.Column("distance_from_city_remark", sa.String(length=1500), nullable=True),
        sa.Column("direction_from_city", sa.String(length=3), nullable=True),
        sa.Column("land_area", sa.Integer(), nullable=True),
        sa.Column("land_area_remark", sa.String(length=1500), nullable=True),
        sa.Column("boundary_artcc_id", sa.String(length=4), nullable=True),
        sa.Column("boundary_artcc_computer_id", sa.String(length=3), nullable=True),
        sa.Column("boundary_artcc_name", sa.String(length=30), nullable=True),
        sa.Column("responsible_artcc_id", sa.String(length=4), nullable=True),
        sa.Column(
            "responsible_artcc_id_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("responsible_artcc_computer_id", sa.String(length=3), nullable=True),
        sa.Column("responsible_artcc_name", sa.String(length=30), nullable=True),
        sa.Column("tie_in_fss_local", sa.Boolean(), nullable=True),
        sa.Column("tie_in_fss_id", sa.String(length=4), nullable=True),
        sa.Column("tie_in_fss_remark", sa.String(length=1500), nullable=True),
        sa.Column("tie_in_fss_name", sa.String(length=30), nullable=True),
        sa.Column("fss_local_phone", sa.String(length=16), nullable=True),
        sa.Column("fss_toll_free_phone", sa.String(length=16), nullable=True),
        sa.Column("alternate_fss_id", sa.String(length=4), nullable=True),
        sa.Column("alternate_fss_name", sa.String(length=30), nullable=True),
        sa.Column(
            "alternate_fss_toll_free_phone",
            sa.String(length=16),
            nullable=True,
        ),
        sa.Column("notam_facility", sa.String(length=4), nullable=True),
        sa.Column("notam_d_available", sa.Boolean(), nullable=True),
        sa.Column("activation_date", sa.Date(), nullable=True),
        sa.Column(
            "status",
            sa.Enum("CI", "CP", "O", name="airportstatusenum"),
            nullable=True,
        ),
        sa.Column("arff_certification", sa.String(length=15), nullable=True),
        sa.Column("arff_certification_remark", sa.String(length=1500), nullable=True),
        sa.Column("npias_federal_agreements", sa.String(length=7), nullable=True),
        sa.Column(
            "npias_federal_agreements_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("airspace_analysis", sa.String(length=13), nullable=True),
        sa.Column("airspace_analysis_remark", sa.String(length=1500), nullable=True),
        sa.Column("airport_of_entry", sa.Boolean(), nullable=True),
        sa.Column("airport_of_entry_remark", sa.String(length=1500), nullable=True),
        sa.Column("customs_landing_rights", sa.Boolean(), nullable=True),
        sa.Column(
            "customs_landing_rights_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("military_civil_join_use", sa.Boolean(), nullable=True),
        sa.Column(
            "military_civil_join_use_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("military_landing_rights", sa.Boolean(), nullable=True),
        sa.Column(
            "military_landing_rights_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "inspection_method",
            sa.Enum("F", "S", "C", "O", "T", name="airportinspectionmethodenum"),
            nullable=True,
        ),
        sa.Column(
            "agency_performing_inspection",
            sa.Enum("F", "S", "C", "N", name="agencyperforminginspectionenum"),
            nullable=True,
        ),
        sa.Column(
            "agency_performing_inspection_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("last_inspection_date", sa.Date(), nullable=True),
        sa.Column(
            "last_inspection_date_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("last_information_request_complete_date", sa.Date(), nullable=True),
        sa.Column("fuel_available", sa.String(length=40), nullable=True),
        sa.Column("fuel_available_remark", sa.String(length=1500), nullable=True),
        sa.Column("airframe_repair_service", sa.String(length=5), nullable=True),
        sa.Column(
            "airframe_repair_service_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("power_plant_repair_service", sa.String(length=5), nullable=True),
        sa.Column(
            "power_plant_repair_service_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("bottled_oxygen", sa.String(length=8), nullable=True),
        sa.Column("bottled_oxygen_remark", sa.String(length=1500), nullable=True),
        sa.Column("bulk_oxygen", sa.String(length=8), nullable=True),
        sa.Column("bulk_oxygen_remark", sa.String(length=1500), nullable=True),
        sa.Column("lighting_schedule", sa.String(length=7), nullable=True),
        sa.Column("lighting_schedule_remark", sa.String(length=1500), nullable=True),
        sa.Column("beacon_schedule", sa.String(length=7), nullable=True),
        sa.Column("beacon_schedule_remark", sa.String(length=1500), nullable=True),
        sa.Column("towered_airport", sa.Boolean(), nullable=True),
        sa.Column("unicom", sa.String(length=7), nullable=True),
        sa.Column("unicom_remark", sa.String(length=1500), nullable=True),
        sa.Column("ctaf", sa.String(length=7), nullable=True),
        sa.Column("ctaf_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "segmented_circle_available",
            sa.Enum("Y", "N", "NONE", "YL", name="segmentedcircleenum"),
            nullable=True,
        ),
        sa.Column(
            "segmented_circle_available_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "beacon_color",
            sa.Enum(
                "CG",
                "CY",
                "CGY",
                "SCG",
                "C",
                "Y",
                "G",
                "N",
                name="beaconcolorenum",
            ),
            nullable=True,
        ),
        sa.Column("beacon_color_remark", sa.String(length=1500), nullable=True),
        sa.Column("noncommerical_landing_fee", sa.Boolean(), nullable=True),
        sa.Column(
            "noncommerical_landing_fee_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "landing_facility_used_for_medical_purposes",
            sa.Boolean(),
            nullable=True,
        ),
        sa.Column(
            "based_general_aviation_single_engine_airplanes",
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            "based_general_aviation_single_engine_airplanes_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "based_general_aviation_multi_engine_airplanes",
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            "based_general_aviation_multi_engine_airplanes_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "based_general_aviation_jet_engine_airplanes",
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            "based_general_aviation_jet_engine_airplanes_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("based_general_aviation_helicopters", sa.Integer(), nullable=True),
        sa.Column(
            "based_general_aviation_helicopters_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("based_gliders", sa.Integer(), nullable=True),
        sa.Column("based_gliders_remark", sa.String(length=1500), nullable=True),
        sa.Column("based_military_aircraft", sa.Integer(), nullable=True),
        sa.Column(
            "based_military_aircraft_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("based_ultralight_aircraft", sa.Integer(), nullable=True),
        sa.Column(
            "based_ultralight_aircraft_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("annual_ops_commercial", sa.Integer(), nullable=True),
        sa.Column(
            "annual_ops_commercial_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("annual_ops_commuter", sa.Integer(), nullable=True),
        sa.Column("annual_ops_commuter_remark", sa.String(length=1500), nullable=True),
        sa.Column("annual_ops_air_taxi", sa.Integer(), nullable=True),
        sa.Column("annual_ops_air_taxi_remark", sa.String(length=1500), nullable=True),
        sa.Column("annual_ops_general_aviation_local", sa.Integer(), nullable=True),
        sa.Column(
            "annual_ops_general_aviation_local_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "annual_ops_general_aviation_itinerant",
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            "annual_ops_general_aviation_itinerant_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("annual_ops_military", sa.Integer(), nullable=True),
        sa.Column("annual_ops_military_remark", sa.String(length=1500), nullable=True),
        sa.Column("annual_ops_end_of_measurement_period", sa.Date(), nullable=True),
        sa.Column("position_source", sa.String(length=16), nullable=True),
        sa.Column("position_date", sa.Date(), nullable=True),
        sa.Column("elevation_source", sa.String(length=16), nullable=True),
        sa.Column("elevation_date", sa.Date(), nullable=True),
        sa.Column("contract_fuel_available", sa.Boolean(), nullable=True),
        sa.Column("transient_storage_facilities", sa.String(length=12), nullable=True),
        sa.Column(
            "transient_storage_facilities_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("other_services_available", sa.String(length=71), nullable=True),
        sa.Column(
            "other_services_available_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "wind_indicator",
            sa.Enum("Y", "N", "NONE", "YL", name="segmentedcircleenum"),
            nullable=True,
        ),
        sa.Column("wind_indicator_remark", sa.String(length=1500), nullable=True),
        sa.Column("icao_id", sa.String(length=7), nullable=True),
        sa.Column("minimum_operational_network", sa.String(length=1), nullable=True),
        sa.PrimaryKeyConstraint("facility_site_number"),
    )
    op.create_index(op.f("ix_airports_faa_id"), "airports", ["faa_id"], unique=False)
    op.create_index(op.f("ix_airports_icao_id"), "airports", ["icao_id"], unique=False)
    op.create_table(
        "airport_remarks",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("remark_element_name", sa.String(length=13), nullable=False),
        sa.Column("remark", sa.String(length=1500), nullable=True),
        sa.ForeignKeyConstraint(
            ["facility_site_number"],
            ["airports.facility_site_number"],
        ),
        sa.PrimaryKeyConstraint("facility_site_number", "remark_element_name"),
    )
    op.create_table(
        "attendance_schedules",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("sequence_number", sa.Integer(), nullable=False),
        sa.Column("attendance_schedule", sa.String(length=108), nullable=True),
        sa.ForeignKeyConstraint(
            ["facility_site_number"],
            ["airports.facility_site_number"],
        ),
        sa.PrimaryKeyConstraint("facility_site_number", "sequence_number"),
    )
    op.create_table(
        "runways",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("name", sa.String(length=7), nullable=False),
        sa.Column("name_remark", sa.String(length=1500), nullable=True),
        sa.Column("length", sa.Integer(), nullable=True),
        sa.Column("length_remark", sa.String(length=1500), nullable=True),
        sa.Column("width", sa.Integer(), nullable=True),
        sa.Column("width_remark", sa.String(length=1500), nullable=True),
        sa.Column("surface_type_condition", sa.String(length=12), nullable=True),
        sa.Column(
            "surface_type_condition_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("surface_treatment", sa.String(length=5), nullable=True),
        sa.Column("surface_treatment_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "pavement_classification_number",
            sa.String(length=11),
            nullable=True,
        ),
        sa.Column(
            "pavement_classification_number_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("edge_light_intensity", sa.String(length=5), nullable=True),
        sa.Column(
            "edge_light_intensity_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("length_source", sa.String(length=16), nullable=True),
        sa.Column("length_source_date", sa.Date(), nullable=True),
        sa.Column(
            "weight_bearing_capacity_single_wheel",
            sa.String(length=6),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_single_wheel_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_dual_wheels",
            sa.String(length=6),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_dual_wheels_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_two_dual_wheels_tandem",
            sa.String(length=6),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_two_dual_wheels_tandem_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_two_dual_wheels_double_tandem",
            sa.String(length=6),
            nullable=True,
        ),
        sa.Column(
            "weight_bearing_capacity_two_dual_wheels_double_tandem_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.ForeignKeyConstraint(
            ["facility_site_number"],
            ["airports.facility_site_number"],
        ),
        sa.PrimaryKeyConstraint("facility_site_number", "name"),
    )
    op.create_table(
        "runway_ends",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("runway_name", sa.String(length=7), nullable=False),
        sa.Column("id", sa.String(length=3), nullable=False),
        sa.Column("id_remark", sa.String(length=1500), nullable=True),
        sa.Column("true_alignment", sa.Integer(), nullable=True),
        sa.Column("true_alignment_remark", sa.String(length=1500), nullable=True),
        sa.Column("approach_type", sa.String(length=10), nullable=True),
        sa.Column("right_traffic", sa.Boolean(), nullable=True),
        sa.Column("right_traffic_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "markings_type",
            sa.Enum(
                "PIR",
                "NPI",
                "BSC",
                "NRS",
                "NSTD",
                "BUOY",
                "STOL",
                "NONE",
                name="runwaymarkingstypeenum",
            ),
            nullable=True,
        ),
        sa.Column("markings_remark", sa.String(length=1500), nullable=True),
        sa.Column(
            "markings_condition",
            sa.Enum("G", "F", "P", name="runwaymarkingsconditionenum"),
            nullable=True,
        ),
        sa.Column("latitude_dms", sa.String(length=15), nullable=True),
        sa.Column("latitude_dms_remark", sa.String(length=1500), nullable=True),
        sa.Column("latitude_secs", sa.String(length=12), nullable=True),
        sa.Column("longitude_dms", sa.String(length=15), nullable=True),
        sa.Column("longitude_dms_remark", sa.String(length=1500), nullable=True),
        sa.Column("longitude_secs", sa.String(length=12), nullable=True),
        sa.Column("elevation", sa.Float(precision=1), nullable=True),
        sa.Column("elevation_remark", sa.String(length=1500), nullable=True),
        sa.Column("threshold_crossing_height", sa.Integer(), nullable=True),
        sa.Column(
            "threshold_crossing_height_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("visual_glide_path_angle", sa.Float(precision=2), nullable=True),
        sa.Column(
            "visual_glide_path_angle_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_latitude_dms",
            sa.String(length=15),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_latitude_dms_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_latitude_secs",
            sa.String(length=12),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_longitude_dms",
            sa.String(length=15),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_longitude_dms_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_longitude_secs",
            sa.String(length=12),
            nullable=True,
        ),
        sa.Column(
            "displaced_threshold_elevation",
            sa.Float(precision=1),
            nullable=True,
        ),
        sa.Column("displaced_threshold_length", sa.Integer(), nullable=True),
        sa.Column(
            "displaced_threshold_length_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("touchdown_zone_elevation", sa.Float(precision=1), nullable=True),
        sa.Column(
            "visual_glide_slope_indicators",
            sa.Enum(
                "S2L",
                "S2R",
                "V2L",
                "V2R",
                "V4L",
                "V4R",
                "V6L",
                "V6R",
                "V12",
                "V16",
                "P2L",
                "P2R",
                "P4L",
                "P4R",
                "NSTD",
                "PVT",
                "VAS",
                "NONE",
                "N",
                "TRIL",
                "TRIR",
                "PSIL",
                "PSIR",
                "PNIL",
                "PNIR",
                name="visualglideslopeindicatorenum",
            ),
            nullable=True,
        ),
        sa.Column(
            "visual_glide_slope_indicators_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "rvr_equipment",
            sa.Enum(
                "T",
                "M",
                "R",
                "N",
                "TM",
                "TR",
                "MR",
                "TMR",
                name="rvrequipmentenum",
            ),
            nullable=True,
        ),
        sa.Column("rvr_equipment_remark", sa.String(length=1500), nullable=True),
        sa.Column("rvv_equipment", sa.Boolean(), nullable=True),
        sa.Column("approach_light_system", sa.String(length=8), nullable=True),
        sa.Column(
            "approach_light_system_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("reil_availability", sa.Boolean(), nullable=True),
        sa.Column("reil_availability_remark", sa.String(length=1500), nullable=True),
        sa.Column("centerline_light_availability", sa.Boolean(), nullable=True),
        sa.Column(
            "centerline_light_availability_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("touchdown_lights_availability", sa.Boolean(), nullable=True),
        sa.Column(
            "touchdown_lights_availability_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_description",
            sa.String(length=11),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_description_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_marking",
            sa.Enum("M", "L", "ML", "LM", name="controllingobjectmarkingenum"),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_marking_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("part77_category", sa.String(length=5), nullable=True),
        sa.Column("part77_category_remark", sa.String(length=1500), nullable=True),
        sa.Column("controlling_object_clearance_slope", sa.Integer(), nullable=True),
        sa.Column(
            "controlling_object_clearance_slope_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_height_above_runway",
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_height_above_runway_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_distance_from_runway",
            sa.Integer(),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_distance_from_runway_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_centerline_offset",
            sa.String(length=7),
            nullable=True,
        ),
        sa.Column(
            "controlling_object_centerline_offset_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("gradient", sa.String(length=5), nullable=True),
        sa.Column("gradient_remark", sa.String(length=1500), nullable=True),
        sa.Column("gradient_direction", sa.String(length=4), nullable=True),
        sa.Column("position_source", sa.String(length=16), nullable=True),
        sa.Column("position_date", sa.Date(), nullable=True),
        sa.Column("elevation_source", sa.String(length=16), nullable=True),
        sa.Column("elevation_date", sa.Date(), nullable=True),
        sa.Column(
            "displaced_threshold_position_source",
            sa.String(length=16),
            nullable=True,
        ),
        sa.Column("displaced_threshold_position_date", sa.Date(), nullable=True),
        sa.Column(
            "displaced_threshold_elevation_source",
            sa.String(length=16),
            nullable=True,
        ),
        sa.Column("displaced_threshold_elevation_date", sa.Date(), nullable=True),
        sa.Column(
            "touchdown_zone_elevation_source",
            sa.String(length=16),
            nullable=True,
        ),
        sa.Column("touchdown_zone_elevation_date", sa.Date(), nullable=True),
        sa.Column("takeoff_run_available", sa.Integer(), nullable=True),
        sa.Column(
            "takeoff_run_available_remark",
            sa.String(length=1500),
            nullable=True,
        ),
        sa.Column("takeoff_distance_available", sa.Integer(), nullable=True),
        sa.Column("accelerate_stop_distance_available", sa.Integer(), nullable=True),
        sa.Column("landing_distance_available", sa.Integer(), nullable=True),
        sa.Column("lahso_distance_available", sa.Integer(), nullable=True),
        sa.Column(
            "id_of_lahso_intersecting_runway",
            sa.String(length=7),
            nullable=True,
        ),
        sa.Column("description_of_lahso_entity", sa.String(length=40), nullable=True),
        sa.Column("lahso_latitude_dms", sa.String(length=15), nullable=True),
        sa.Column("lahso_latitude_secs", sa.String(length=12), nullable=True),
        sa.Column("lahso_longitude_dms", sa.String(length=15), nullable=True),
        sa.Column("lahso_longitude_secs", sa.String(length=12), nullable=True),
        sa.Column("lahso_coords_source", sa.String(length=16), nullable=True),
        sa.Column("lahso_coords_date", sa.Date(), nullable=True),
        sa.Column("arresting_gear", sa.String(length=9), nullable=True),
        sa.ForeignKeyConstraint(
            ["facility_site_number", "runway_name"],
            ["runways.facility_site_number", "runways.name"],
        ),
        sa.PrimaryKeyConstraint("facility_site_number", "runway_name", "id"),
    )
    op.create_table(
        "runway_remarks",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("runway_name", sa.String(length=7), nullable=False),
        sa.Column("remark_element_name", sa.String(length=13), nullable=False),
        sa.Column("remark", sa.String(length=1500), nullable=True),
        sa.ForeignKeyConstraint(
            ["facility_site_number", "runway_name"],
            ["runways.facility_site_number", "runways.name"],
        ),
        sa.PrimaryKeyConstraint(
            "facility_site_number", "runway_name", "remark_element_name"
        ),
    )
    op.create_table(
        "runway_end_remarks",
        sa.Column("facility_site_number", sa.String(length=11), nullable=False),
        sa.Column("runway_name", sa.String(length=7), nullable=False),
        sa.Column("id", sa.String(length=3), nullable=False),
        sa.Column("remark_element_name", sa.String(length=13), nullable=False),
        sa.Column("remark", sa.String(length=1500), nullable=True),
        sa.ForeignKeyConstraint(
            ["facility_site_number", "runway_name", "id"],
            [
                "runway_ends.facility_site_number",
                "runway_ends.runway_name",
                "runway_ends.id",
            ],
        ),
        sa.PrimaryKeyConstraint(
            "facility_site_number", "runway_name", "id", "remark_element_name"
        ),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("runway_end_remarks")
    op.drop_table("runway_remarks")
    op.drop_table("runway_ends")
    op.drop_table("runways")
    op.drop_table("attendance_schedules")
    op.drop_table("airport_remarks")
    op.drop_index(op.f("ix_airports_icao_id"), table_name="airports")
    op.drop_index(op.f("ix_airports_faa_id"), table_name="airports")
    op.drop_table("airports")
    # ### end Alembic commands ###
